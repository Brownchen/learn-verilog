// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "09/06/2018 21:49:53"
                                                                                
// Verilog Test Bench template for design : adder4
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ps		//定义仿真的单位时间和精度
module adder4_vlg_tst();	//定义了测试模块的变量类型
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg [3:0] a_in;
reg [3:0] b_in;
reg mclk;
reg rst_n;
// wires                                               
wire [4:0]  c_out;

// assign statements (if any)                          
adder4 i1 (													//引用待测模块的端口实例并命名
// port map - connection between master ports and signals/registers   
	.a_in(a_in),
	.b_in(b_in),
	.c_out(c_out),
	.mclk(mclk),
	.rst_n(rst_n)
);

initial                   						//其中内容只执行一次，一般用来非重复性的信号赋值                             
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
   rst_n = 0;
	#100 rst_n = 1;
	
	mclk = 0;
	
			a_in = 1;
			b_in = 3;
	#200  a_in = 2;
		   b_in = 0;
	#200  a_in = 3;
			b_in = 3;
		  
// --> end                                             
$display("Running testbench");  //系统函数，他会在modelsim的交互窗口中显示（）里的相应信息                     
end   
                                                 
always                                   	//其中内容可以重复执行，一般用于重复性信号的赋值，比如时钟信号              
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
   #10 mclk = ~mclk;                                                    
//@eachvec;                                              
// --> end                                             
end                                                    
endmodule

