// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 SJ Full Version"

// DATE "09/10/2018 21:29:57"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module cnt10 (
	CLR,
	CLK,
	Q);
input 	CLR;
input 	CLK;
output 	[3:0] Q;

// Design Ports Information
// Q[0]	=>  Location: PIN_32,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q[1]	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q[2]	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q[3]	=>  Location: PIN_34,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLK	=>  Location: PIN_23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLR	=>  Location: PIN_24,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("cnt10_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \Q[0]~output_o ;
wire \Q[1]~output_o ;
wire \Q[2]~output_o ;
wire \Q[3]~output_o ;
wire \CLK~input_o ;
wire \CLK~inputclkctrl_outclk ;
wire \Q[0]~3_combout ;
wire \CLR~input_o ;
wire \CLR~inputclkctrl_outclk ;
wire \Q[0]~reg0_q ;
wire \Q[2]~1_combout ;
wire \Q[2]~reg0_q ;
wire \Q~2_combout ;
wire \Q[3]~reg0_q ;
wire \Q~0_combout ;
wire \Q[1]~reg0_q ;


// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \Q[0]~output (
	.i(\Q[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[0]~output .bus_hold = "false";
defparam \Q[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \Q[1]~output (
	.i(\Q[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N23
cycloneive_io_obuf \Q[2]~output (
	.i(\Q[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[2]~output .bus_hold = "false";
defparam \Q[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N16
cycloneive_io_obuf \Q[3]~output (
	.i(\Q[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[3]~output .bus_hold = "false";
defparam \Q[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \CLK~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLK~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLK~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLK~inputclkctrl .clock_type = "global clock";
defparam \CLK~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N28
cycloneive_lcell_comb \Q[0]~3 (
// Equation(s):
// \Q[0]~3_combout  = !\Q[0]~reg0_q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\Q[0]~reg0_q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Q[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \Q[0]~3 .lut_mask = 16'h0F0F;
defparam \Q[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \CLR~input (
	.i(CLR),
	.ibar(gnd),
	.o(\CLR~input_o ));
// synopsys translate_off
defparam \CLR~input .bus_hold = "false";
defparam \CLR~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \CLR~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLR~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLR~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLR~inputclkctrl .clock_type = "global clock";
defparam \CLR~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y6_N29
dffeas \Q[0]~reg0 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\Q[0]~3_combout ),
	.asdata(vcc),
	.clrn(\CLR~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[0]~reg0 .is_wysiwyg = "true";
defparam \Q[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N20
cycloneive_lcell_comb \Q[2]~1 (
// Equation(s):
// \Q[2]~1_combout  = \Q[2]~reg0_q  $ (((\Q[1]~reg0_q  & \Q[0]~reg0_q )))

	.dataa(\Q[1]~reg0_q ),
	.datab(gnd),
	.datac(\Q[2]~reg0_q ),
	.datad(\Q[0]~reg0_q ),
	.cin(gnd),
	.combout(\Q[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \Q[2]~1 .lut_mask = 16'h5AF0;
defparam \Q[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y6_N21
dffeas \Q[2]~reg0 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\Q[2]~1_combout ),
	.asdata(vcc),
	.clrn(\CLR~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[2]~reg0 .is_wysiwyg = "true";
defparam \Q[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N26
cycloneive_lcell_comb \Q~2 (
// Equation(s):
// \Q~2_combout  = (\Q[1]~reg0_q  & (\Q[3]~reg0_q  $ (((\Q[0]~reg0_q  & \Q[2]~reg0_q ))))) # (!\Q[1]~reg0_q  & (\Q[3]~reg0_q  & ((\Q[2]~reg0_q ) # (!\Q[0]~reg0_q ))))

	.dataa(\Q[1]~reg0_q ),
	.datab(\Q[0]~reg0_q ),
	.datac(\Q[3]~reg0_q ),
	.datad(\Q[2]~reg0_q ),
	.cin(gnd),
	.combout(\Q~2_combout ),
	.cout());
// synopsys translate_off
defparam \Q~2 .lut_mask = 16'h78B0;
defparam \Q~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y6_N27
dffeas \Q[3]~reg0 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\Q~2_combout ),
	.asdata(vcc),
	.clrn(\CLR~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[3]~reg0 .is_wysiwyg = "true";
defparam \Q[3]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N22
cycloneive_lcell_comb \Q~0 (
// Equation(s):
// \Q~0_combout  = (\Q[1]~reg0_q  & (((!\Q[0]~reg0_q )))) # (!\Q[1]~reg0_q  & (\Q[0]~reg0_q  & ((\Q[2]~reg0_q ) # (!\Q[3]~reg0_q ))))

	.dataa(\Q[3]~reg0_q ),
	.datab(\Q[2]~reg0_q ),
	.datac(\Q[1]~reg0_q ),
	.datad(\Q[0]~reg0_q ),
	.cin(gnd),
	.combout(\Q~0_combout ),
	.cout());
// synopsys translate_off
defparam \Q~0 .lut_mask = 16'h0DF0;
defparam \Q~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y6_N23
dffeas \Q[1]~reg0 (
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\Q~0_combout ),
	.asdata(vcc),
	.clrn(\CLR~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Q[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \Q[1]~reg0 .is_wysiwyg = "true";
defparam \Q[1]~reg0 .power_up = "low";
// synopsys translate_on

assign Q[0] = \Q[0]~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Q[2] = \Q[2]~output_o ;

assign Q[3] = \Q[3]~output_o ;

endmodule
