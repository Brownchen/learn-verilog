// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 SJ Full Version"

// DATE "09/08/2018 21:25:17"

// 
// Device: Altera EP4CE6E22A7 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module comp4 (
	A,
	B,
	LG,
	EQ,
	SM);
input 	[3:0] A;
input 	[3:0] B;
output 	LG;
output 	EQ;
output 	SM;

// Design Ports Information
// LG	=>  Location: PIN_43,	 I/O Standard: 2.5 V,	 Current Strength: Default
// EQ	=>  Location: PIN_136,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SM	=>  Location: PIN_32,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[3]	=>  Location: PIN_90,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[2]	=>  Location: PIN_91,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[2]	=>  Location: PIN_50,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[3]	=>  Location: PIN_53,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[1]	=>  Location: PIN_135,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[0]	=>  Location: PIN_46,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[0]	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B[1]	=>  Location: PIN_49,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("comp4_7_1200mv_-40c_v_slow.sdo");
// synopsys translate_on

wire \LG~output_o ;
wire \EQ~output_o ;
wire \SM~output_o ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \B[3]~input_o ;
wire \A[3]~input_o ;
wire \LessThan0~2_combout ;
wire \LessThan0~0_combout ;
wire \B[0]~input_o ;
wire \A[0]~input_o ;
wire \B[1]~input_o ;
wire \A[1]~input_o ;
wire \LessThan0~1_combout ;
wire \LessThan0~3_combout ;
wire \LessThan1~0_combout ;
wire \LessThan1~1_combout ;
wire \FUNC_COMP~0_combout ;
wire \FUNC_COMP~1_combout ;


// Location: IOOBUF_X5_Y0_N23
cycloneive_io_obuf \LG~output (
	.i(\LessThan0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LG~output_o ),
	.obar());
// synopsys translate_off
defparam \LG~output .bus_hold = "false";
defparam \LG~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X9_Y24_N9
cycloneive_io_obuf \EQ~output (
	.i(!\FUNC_COMP~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EQ~output_o ),
	.obar());
// synopsys translate_off
defparam \EQ~output .bus_hold = "false";
defparam \EQ~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \SM~output (
	.i(\FUNC_COMP~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\SM~output_o ),
	.obar());
// synopsys translate_off
defparam \SM~output .bus_hold = "false";
defparam \SM~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N1
cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X13_Y0_N1
cycloneive_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N1
cycloneive_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N8
cycloneive_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N12
cycloneive_lcell_comb \LessThan0~2 (
// Equation(s):
// \LessThan0~2_combout  = (\A[2]~input_o  & (\B[2]~input_o  & (\B[3]~input_o  $ (!\A[3]~input_o )))) # (!\A[2]~input_o  & (!\B[2]~input_o  & (\B[3]~input_o  $ (!\A[3]~input_o ))))

	.dataa(\A[2]~input_o ),
	.datab(\B[2]~input_o ),
	.datac(\B[3]~input_o ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~2_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~2 .lut_mask = 16'h9009;
defparam \LessThan0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N24
cycloneive_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (\B[3]~input_o  & (\A[2]~input_o  & (!\B[2]~input_o  & \A[3]~input_o ))) # (!\B[3]~input_o  & ((\A[3]~input_o ) # ((\A[2]~input_o  & !\B[2]~input_o ))))

	.dataa(\A[2]~input_o ),
	.datab(\B[2]~input_o ),
	.datac(\B[3]~input_o ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'h2F02;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y6_N22
cycloneive_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X7_Y0_N1
cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X13_Y0_N15
cycloneive_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X11_Y24_N15
cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N10
cycloneive_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (\B[1]~input_o  & (!\B[0]~input_o  & (\A[0]~input_o  & \A[1]~input_o ))) # (!\B[1]~input_o  & ((\A[1]~input_o ) # ((!\B[0]~input_o  & \A[0]~input_o ))))

	.dataa(\B[0]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\B[1]~input_o ),
	.datad(\A[1]~input_o ),
	.cin(gnd),
	.combout(\LessThan0~1_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = 16'h4F04;
defparam \LessThan0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N14
cycloneive_lcell_comb \LessThan0~3 (
// Equation(s):
// \LessThan0~3_combout  = (\LessThan0~0_combout ) # ((\LessThan0~2_combout  & \LessThan0~1_combout ))

	.dataa(\LessThan0~2_combout ),
	.datab(\LessThan0~0_combout ),
	.datac(gnd),
	.datad(\LessThan0~1_combout ),
	.cin(gnd),
	.combout(\LessThan0~3_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~3 .lut_mask = 16'hEECC;
defparam \LessThan0~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N0
cycloneive_lcell_comb \LessThan1~0 (
// Equation(s):
// \LessThan1~0_combout  = (\B[3]~input_o  & (((!\A[2]~input_o  & \B[2]~input_o )) # (!\A[3]~input_o ))) # (!\B[3]~input_o  & (!\A[2]~input_o  & (\B[2]~input_o  & !\A[3]~input_o )))

	.dataa(\A[2]~input_o ),
	.datab(\B[2]~input_o ),
	.datac(\B[3]~input_o ),
	.datad(\A[3]~input_o ),
	.cin(gnd),
	.combout(\LessThan1~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~0 .lut_mask = 16'h40F4;
defparam \LessThan1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N26
cycloneive_lcell_comb \LessThan1~1 (
// Equation(s):
// \LessThan1~1_combout  = (\B[1]~input_o  & (((\B[0]~input_o  & !\A[0]~input_o )) # (!\A[1]~input_o ))) # (!\B[1]~input_o  & (\B[0]~input_o  & (!\A[0]~input_o  & !\A[1]~input_o )))

	.dataa(\B[0]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\B[1]~input_o ),
	.datad(\A[1]~input_o ),
	.cin(gnd),
	.combout(\LessThan1~1_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~1 .lut_mask = 16'h20F2;
defparam \LessThan1~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N20
cycloneive_lcell_comb \FUNC_COMP~0 (
// Equation(s):
// \FUNC_COMP~0_combout  = (\LessThan1~0_combout ) # ((\LessThan0~3_combout ) # ((\LessThan0~2_combout  & \LessThan1~1_combout )))

	.dataa(\LessThan0~2_combout ),
	.datab(\LessThan1~0_combout ),
	.datac(\LessThan1~1_combout ),
	.datad(\LessThan0~3_combout ),
	.cin(gnd),
	.combout(\FUNC_COMP~0_combout ),
	.cout());
// synopsys translate_off
defparam \FUNC_COMP~0 .lut_mask = 16'hFFEC;
defparam \FUNC_COMP~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X10_Y6_N6
cycloneive_lcell_comb \FUNC_COMP~1 (
// Equation(s):
// \FUNC_COMP~1_combout  = (!\LessThan0~3_combout  & ((\LessThan1~0_combout ) # ((\LessThan0~2_combout  & \LessThan1~1_combout ))))

	.dataa(\LessThan0~2_combout ),
	.datab(\LessThan1~0_combout ),
	.datac(\LessThan1~1_combout ),
	.datad(\LessThan0~3_combout ),
	.cin(gnd),
	.combout(\FUNC_COMP~1_combout ),
	.cout());
// synopsys translate_off
defparam \FUNC_COMP~1 .lut_mask = 16'h00EC;
defparam \FUNC_COMP~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign LG = \LG~output_o ;

assign EQ = \EQ~output_o ;

assign SM = \SM~output_o ;

endmodule
